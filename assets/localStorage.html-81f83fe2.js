import{_ as t,r as p,o,c,a as n,b as a,d as e,e as l}from"./app-9f26182c.js";const i={},u=l(`<h2 id="单页面监听localstorage变动" tabindex="-1"><a class="header-anchor" href="#单页面监听localstorage变动" aria-hidden="true">#</a> 单页面监听localStorage变动</h2><ul><li><p>方法1：重写localStorage.setItem()方法</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> oldSetItem <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span>setItem
window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function-variable function">setItem</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;你要监听的key&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
  <span class="token punctuation">}</span>
  <span class="token function">oldSetItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> newValue<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>方法2：封装原生localStorage的api,生成自己的自定义功能</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> myStorage <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">setItem</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> val<span class="token punctuation">,</span> <span class="token operator">...</span>rest</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
    window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function">setItem</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span>val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token function">getItem</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span><span class="token punctuation">.</span><span class="token punctuation">.</span>rest</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
    <span class="token keyword">return</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span> <span class="token function">getItem</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token comment">// ...其他方法</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> myStorage
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>方法3：监听localStorage时间</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// 重写setItem方法</span>
<span class="token keyword">const</span> oldSetItem <span class="token operator">=</span> window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span>setItem
window<span class="token punctuation">.</span>localStorage<span class="token punctuation">.</span><span class="token function-variable function">setItem</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> setItemEvent <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Event</span><span class="token punctuation">(</span><span class="token string">&quot;setItemEvent&quot;</span><span class="token punctuation">)</span>
  setItemEvent<span class="token punctuation">.</span>key <span class="token operator">=</span> key
  setItemEvent<span class="token punctuation">.</span>newValue <span class="token operator">=</span> newValue
  window<span class="token punctuation">.</span><span class="token function">dispatchEvent</span><span class="token punctuation">(</span>setItemEvent<span class="token punctuation">)</span>
  <span class="token function">oldSetItem</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 添加监听事件</span>
window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;setItemEvent&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// do something</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="不同页面监听localstorage变动" tabindex="-1"><a class="header-anchor" href="#不同页面监听localstorage变动" aria-hidden="true">#</a> 不同页面监听localStorage变动</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>window<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;storage&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>e<span class="token punctuation">.</span>key <span class="token operator">===</span> <span class="token string">&#39;你要监听的key&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// do something</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>newValue<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="参考链接" tabindex="-1"><a class="header-anchor" href="#参考链接" aria-hidden="true">#</a> 参考链接</h2>`,5),r={href:"https://blog.csdn.net/qq_42076140/article/details/80307326",target:"_blank",rel:"noopener noreferrer"},d={href:"https://segmentfault.com/q/1010000015906159",target:"_blank",rel:"noopener noreferrer"},k={href:"https://github.com/robinvdvleuten/vuex-persistedstate",target:"_blank",rel:"noopener noreferrer"};function v(m,b){const s=p("ExternalLinkIcon");return o(),c("div",null,[u,n("ul",null,[n("li",null,[n("a",r,[a("localStorage单页面及不同页面监听变动"),e(s)])]),n("li",null,[n("a",d,[a("vue 怎么监听localStorage值得变化"),e(s)])]),n("li",null,[n("a",k,[a("vuex持久化插件"),e(s)])])])])}const h=t(i,[["render",v],["__file","localStorage.html.vue"]]);export{h as default};
