(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{542:function(a,s,t){"use strict";t.r(s);var n=t(0),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("生系统签名的apk用的最多的有两种方法，这里将一一介绍一下：")]),a._v(" "),s("h2",{attrs:{id:"第一种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第一种方法"}},[a._v("#")]),a._v(" "),s("strong",[a._v("第一种方法")])]),a._v(" "),s("p",[a._v("执行比较简单，但是不利于后期的调试，每调试一次就要重新执行签名的步奏生成系统签名：")]),a._v(" "),s("p",[a._v('1、开发具有系统权限的apk，这里就需要在AndroidManifest中配置ShareUserId,这个文件在该项目下app/src/main/AndroidManifest.xml。在这里文件里添加 android:sharedUserId="android.uid.system"就可以，当然只添加这一项是肯定不行的，当你添加这一行代码之后，就会发现该项目运行不了了，因为这里只是声明了系统权限并没有对他进行系统签名。')]),a._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/shug666/image/main/images/971cb1379e2cf0b35574df09ccb0b5c5.png",alt:"img"}})]),a._v(" "),s("p",[a._v("2、直接Build出来的apk是不能安装的，这时候还要对Build出来的apk进行系统签名，在cmd中执行如下命令，（为了方便，把这些文件都放在同一个文件夹下）签名的命令如下")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("java jar signapk.jar platform.x509.pem platform.pk8 oldapp.apk newapp.apk\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("其中oldapp.apk表示我们刚才直接Build生成的apk，newapp.apk表示我们需要生成的带系统签名的apk。signapk.jar,platform.x509,platform.pk8都是在源码文件中，当然如果你不会编译Android 源码你也可以直接在网上下载对应版本的源码。网上有许多教你如何去编译Android源码（https://www.jianshu.com/p/e0e992b51f31），编译完成之后，这些文件都可以在源码中找到一般都在../build/target/product/security中。生成的newapp.apk就是我们需要的系统apk了。")]),a._v(" "),s("h2",{attrs:{id:"第二种方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种方法"}},[a._v("#")]),a._v(" 第二种方法")]),a._v(" "),s("p",[a._v("1、需要的文件")]),a._v(" "),s("ol",[s("li",[a._v("可用的Android Studio和Linux系统环境。")]),a._v(" "),s("li",[a._v("Android源码环境，并且已经编译过了")]),a._v(" "),s("li",[a._v("下载keytool-importkeypair https://github.com/getfatday/keytool-importkeypair")])]),a._v(" "),s("p",[a._v("2、具体的操作")]),a._v(" "),s("ol",[s("li",[a._v("在Android Studio中build->Generate Signed APK，之后输入密码别名等，生成一个你自己的新的jks文件。")]),a._v(" "),s("li",[a._v("在Android 源码环境中，进入build/target/product/security将platform.pk8，platform.x509.pem和第一步生成的jks放在一个目录中。")]),a._v(" "),s("li",[a._v("在linux环境中，将keytool-importkeypair下载后，你可以将keytool-importkeypair这个可执行文件和jks等放到一个目录中。执行"),s("code",[a._v("./keytool-importkeypair -k jks的文件名 -p jks的密码 -pk8 platform.pk8 -cert platform.x509.pem -alias jks的别名")]),a._v("，这样的话可以将系统签名引入到jks中。接下来只需要在Android Studio Run的时候对app签名时使用这个签名就可以了")])]),a._v(" "),s("p",[a._v("3.在Android工程中，将如下内容添加到app的build.gradle中便可。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("　　signingConfigs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            storeFile "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("“"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("/app"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SignApk")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("SignDemo1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v('jks"'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            storePassword "),s("span",{pre:!0,attrs:{class:"token char"}},[a._v("'jks的密码'")]),a._v("\n            keyAlias "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"jks的别名"')]),a._v("\n            keyPassword "),s("span",{pre:!0,attrs:{class:"token char"}},[a._v("'jks的密码'")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n \n        debug "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n            storeFile "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"../app/SignApk/SignDemo1.jks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n            storePassword "),s("span",{pre:!0,attrs:{class:"token char"}},[a._v("'jks的密码'")]),a._v("\n            keyAlias "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"jks的别名"')]),a._v("\n            keyPassword "),s("span",{pre:!0,attrs:{class:"token char"}},[a._v("'jks的密码'")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n　　"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br")])]),s("p",[a._v("需要注意的就是，上面提到的jks密码就是在生成SignDemo.jks时你设置的密码。storeFile file就是你的SignDemo1.jks存放的位置，我这里就是把它存放在当前项目下的APP文件中（在app文件中新建SignAPK文件，再把SignDemo1.jks放入该文件中）")]),a._v(" "),s("p",[a._v("​    \t配置完之后，就可以直接Build ->Build APK 生成的apk就可以直接安装了。")]),a._v(" "),s("h2",{attrs:{id:"参考网址"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#参考网址"}},[a._v("#")]),a._v(" 参考网址")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/Donald_Zhuang/article/details/127472471在Android Studio中开发系统应用的环境配置")]),a._v(" "),s("p",[a._v("https://www.jianshu.com/p/10889088840e ：一次调用android.jar的internal与hideApi的解决方案\nhttps://www.jianshu.com/p/10889088840e：开源带hide api的android.jar项目\nhttps://hardiannicko.medium.com/create-your-own-android-hidden-apis-fa3cca02d345 ：自行创建 android.jar教程\nhttps://blog.csdn.net/DKBDKBDKB/article/details/122347440 : Android11 全编译后无法生成framework.jar的解决方案\nhttps://stackoverflow.com/questions/39657812/how-to-import-x509-pem-pk8-file-into-jks-keystore ：How to import x509.pem pk8 file")])])}),[],!1,null,null,null);s.default=e.exports}}]);